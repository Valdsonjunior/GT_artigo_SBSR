////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
--Passo 01
--União mv_indicadores_queimadas e mv_indicadores_queimadas_2	
	SELECT 
		id,
		id_evento,
		id_status_evento,
		dt_passagem,
		area_total_evento_ha
	FROM queimadas.mv_indicadores_queimadas
	UNION
	SELECT 
		id,
		id_evento,
		id_status_evento,
		dt_passagem,
		area_total_evento_ha
	FROM queimadas.mv_indicadores_queimadas2

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
--Passo 02
--Subconsulta para área de influência
SELECT 
  	TO_CHAR(dt_passagem, 'YYYY/MM/DD')::date as data,	
  	count(*) as deteccoes,
    SUM(area_total_evento_ha)::double precision as area_influen_ha
FROM 
  	queimadas.mv_indicadores_queimadas mv1
JOIN  
 	 bases_auxiliares.ibge_bc250_lim_unidade_federacao_a AS ep 
  	ON ST_Intersects(mv1.geom_acumulada, ep.geom)
JOIN  
  	queimadas.tb_escopo_queimadas AS escopo 
  	ON ST_Intersects(mv1.geom_acumulada, escopo.geom) 
WHERE  
	ep.sigla = 'AM'
	AND mv1.dt_passagem >= '2024-01-01'
	AND mv1.dt_passagem <= '2025-01-01'
GROUP BY 
  	data;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Passo 03
--Subconsulta para eventos de fogo
SELECT  
        DATE(ev1.dt_minima) AS dt_minima, 
        COUNT(ev1.dt_minima) AS num_eventos 
FROM  
        queimadas.tb_evento AS ev1 
JOIN  
        bases_auxiliares.ibge_bc250_lim_unidade_federacao_a AS ep1 
        ON ST_Intersects(ev1.geom, ep1.geom) -- Interseção com a máscara de escopo espacial 
JOIN  
        queimadas.tb_escopo_queimadas AS escopo 
        ON ST_Intersects(ev1.geom, escopo.geom) 
WHERE  
        ev1.id_status_evento IN (1, 2, 3) -- Condição de eventos ativos, em observação
        AND ev1.area_km2 > 1 -- Condição de área maior que 1km2 
        AND ep1.sigla = 'AM' -- Filtro  
        AND ev1.dt_minima >= '2024-01-01' 
        AND ev1.dt_minima <= '2025-01-01' -- Define período a ser investigado 
GROUP BY  
        DATE(ev1.dt_minima) 
),   

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Passo 04
--Corrigir a soma de área por detecções. 
--Teste com ID:506682
SELECT SUM(
    CASE 
        WHEN delta_area_ha = 0 THEN (SELECT MIN(area_acumulada_ha) FROM queimadas.mv_indicadores_queimadas WHERE id_evento = '5066822')
        ELSE delta_area_ha
    END
) AS soma_ajustada
FROM queimadas.mv_indicadores_queimadas
WHERE id_evento = '5066822';

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Passo 05
--Corrigir a soma de área por detecções. 
--Teste 02 com ID:506682

SELECT SUM(CASE 
        WHEN delta_area_ha = 0 THEN area_acumulada_ha
        ELSE delta_area_ha
    END)::double precision as area_influen_ha
FROM queimadas.mv_indicadores_queimadas
WHERE id_evento = '5066822';


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Passo 05
--Corrigir a soma de área por detecções. 
--Teste 02 com ID:4838912
SELECT SUM(CASE 
        WHEN dt_passagem = dt_min_evento THEN area_acumulada_ha
        ELSE delta_area_ha
    END)::double precision as area_influen_ha
FROM queimadas.mv_indicadores_queimadas
WHERE id_evento = '4838912';

